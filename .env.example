# Security Reconnaissance Platform - Environment Configuration

import secrets

# ============================================================================
# SECURITY
# ============================================================================

# JWT secret key for authentication (REQUIRED)
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET_KEY=print(secrets.token_urlsafe(32))

# Master encryption key (auto-generated if not provided)
# RECON_MASTER_KEY=

# Enable encryption for API keys
ENCRYPTION_ENABLED=true

# ============================================================================
# DATABASE
# ============================================================================

# SQLite (development)
DATABASE_URL=sqlite+aiosqlite:///./data/recon.db

# PostgreSQL (production)
# DATABASE_URL=postgresql+asyncpg://user:password@localhost/recon

# Database pool settings
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30
DB_ECHO=false

# ============================================================================
# SCANNING
# ============================================================================

# Scan profile: passive, normal, aggressive
SCAN_PROFILE=normal

# Rate limiting (requests per second)
GLOBAL_RATE_LIMIT=1000
DOMAIN_RATE_LIMIT=5

# DNS settings
DNS_TIMEOUT=5

# Port scanning
PORT_SCAN_TIMEOUT=2

# HTTP settings
HTTP_TIMEOUT=10

# ============================================================================
# TOOLS
# ============================================================================

# Tools directory
TOOLS_DIRECTORY=./tools

# Recursion settings
ENABLE_RECURSION=false
RECURSION_DEPTH=2

# Phase toggles
ENABLE_HORIZONTAL=true
ENABLE_PASSIVE=true
ENABLE_ACTIVE=true
ENABLE_WEB_PROBING=true

# ============================================================================
# WEB DISCOVERY
# ============================================================================

# Enable intelligent web discovery (crawling, directory enum, API discovery)
ENABLE_WEB_DISCOVERY=false

# Intelligent crawler settings
CRAWLER_MAX_DEPTH=5
CRAWLER_MAX_PAGES=1000
CRAWLER_TIMEOUT=10

# Directory enumeration settings
DIRECTORY_ENUM_ENABLED=true
DIRECTORY_ENUM_LEARNING=true  # Enable learning from discoveries

# API discovery settings
API_DISCOVERY_ENABLED=true
API_DISCOVERY_JS_ANALYSIS=true  # Analyze JavaScript files for API calls
API_DISCOVERY_GRAPHQL_INTROSPECTION=true  # Try GraphQL introspection
API_DISCOVERY_MAX_JS_FILES=50  # Maximum JS files to analyze per subdomain

# Web discovery rate limiting
WEB_DISCOVERY_RATE_LIMIT=5  # Requests per second for web discovery
WEB_DISCOVERY_MAX_SUBDOMAINS=10  # Maximum subdomains to run web discovery on

# ============================================================================
# VULNERABILITY INTELLIGENCE (Phase 5)
# ============================================================================

# Enable AI-powered vulnerability intelligence
ENABLE_VULNERABILITY_INTELLIGENCE=true

# Vulnerability correlation
VULN_CORRELATION_ENABLED=true
VULN_RULE_BASED_DETECTION=true  # Enable rule-based detection
VULN_ML_DETECTION=true  # Enable ML-based anomaly detection

# Exploit matching
EXPLOIT_MATCHING_ENABLED=true
AUTO_SYNC_EXPLOIT_DB=false  # Automatically sync exploit database
EXPLOIT_DB_SYNC_INTERVAL_DAYS=7  # How often to sync exploit database

# Risk scoring
RISK_SCORING_ENABLED=true
RISK_SCORING_AUTO_RECALCULATE=false  # Auto-recalculate after feedback
RISK_SCORING_CONSIDER_BUSINESS_CONTEXT=true

# Pattern learning
PATTERN_LEARNING_ENABLED=true
MIN_TRAINING_SAMPLES=20  # Minimum feedback needed for pattern retraining
AUTO_RETRAIN_PATTERNS=true  # Automatically retrain patterns

# Intelligence thresholds
VULN_MIN_CONFIDENCE=0.6  # Minimum confidence to report vulnerability
EXPLOIT_MIN_RELIABILITY=0.5  # Minimum reliability to consider exploit
RISK_CRITICAL_THRESHOLD=90  # Score threshold for critical risk

# Vulnerability chaining
VULN_CHAINING_ENABLED=true  # Enable attack chain discovery
VULN_CHAINING_MIN_CHAIN_LENGTH=2  # Minimum vulnerabilities in a chain
VULN_CHAINING_MAX_CHAIN_LENGTH=5  # Maximum vulnerabilities in a chain
VULN_CHAINING_MIN_RISK_SCORE=40  # Minimum risk score to report chain

# Pattern recognition orchestrator
ENABLE_PATTERN_RECOGNITION=true  # Enable unified pattern recognition system
PATTERN_TEMPORAL_ENABLED=true  # Enable temporal pattern analysis
PATTERN_SPATIAL_ENABLED=true  # Enable spatial pattern analysis
PATTERN_BEHAVIORAL_ENABLED=true  # Enable behavioral pattern analysis
PATTERN_CHAINING_ENABLED=true  # Enable vulnerability chaining
PATTERN_PREDICTIVE_ENABLED=true  # Enable predictive analysis (when available)

# Pattern recognition parameters
PATTERN_TIME_WINDOW_DAYS=30  # Time window for temporal analysis
PATTERN_LOOKBACK_DAYS=7  # Lookback days for behavioral analysis
PATTERN_MAX_CHAIN_LENGTH=5  # Maximum chain length for chaining
PATTERN_MIN_CONFIDENCE=0.7  # Minimum confidence for pattern detection

# ============================================================================
# API KEYS (optional - can also be configured via API)
# ============================================================================

# WhoIsXMLAPI for company acquisition discovery
# WHOISXML_API_KEY=

# Censys for CT log scanning
# CENSYS_API_ID=
# CENSYS_API_SECRET=

# BufferOver for CT log scanning
# BUFFEROVER_API_KEY=

# GitHub token for github-subdomains
# GITHUB_TOKEN=

# SecurityTrails
# SECURITYTRAILS_API_KEY=

# Shodan
# SHODAN_API_KEY=

# VirusTotal
# VIRUSTOTAL_API_KEY=

# ============================================================================
# LOGGING
# ============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# ============================================================================
# APPLICATION
# ============================================================================

# Server host and port
HOST=127.0.0.1
PORT=8000

# Enable hot reload in development
RELOAD=true

# ============================================================================
# WEBSOCKET
# ============================================================================

# WebSocket settings for real-time updates
# WebSocket endpoint: ws://HOST:PORT/ws
# Connect with optional domain_id query parameter: ws://HOST:PORT/ws?domain_id=1
# No additional configuration needed - WebSocket is enabled by default

# The dashboard uses WebSocket for:
# - Real-time scan progress updates
# - Live subdomain discoveries
# - Vulnerability detection alerts
# - Pattern recognition notifications
# - Scan completion/failure events

